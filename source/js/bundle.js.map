{"version":3,"sources":["webpack://rvt-test-project/./source/js/calculator.js"],"names":["AREA_MIN","AREA_MAX","BATHROOM_AREA_MIN","BATHROOM_AREA_MAX","DOORS_MIN","DOORS_MAX","COST_PER_DOOR","INPUT_DOOR_PERCENT","SLIDER_SHIFT","spaceTypes","electricityTypes","repairsTypes","isBathroomRepair","isWarmFloor","roofTypes","calculationResult","document","querySelector","spaceTypeInput","electricityInput","repairsTypesInput","bathroomRepairInput","warmFloorRepairInput","doorsInput","repairsAreaInput","roofInput","bathroomAreaInput","inputDoor","inputDoorText","slideArea","slideBathroom","sliderPointArea","sliderPointBathroom","sliderArea","sliderBathroomArea","spaceTypeCost","value","electricityCost","repairsTypesCost","bathroomRepairCost","warmFloorRepairCost","roofTypesCost","doorsNumber","Number","sliderAreaRepairs","parseInt","sliderbathroomAreaRepairs","formatResult","num","result","toString","replace","calculateResultCost","checked","toFixed","renderResultCost","textContent","spaceTypeInputHandler","electricityTypesInputHandler","repairsTypesInputHandler","bathroomRepairInputHandler","classList","add","remove","warmFloorInputHandler","roofInputHandler","repairsAreaInputHandler","bathroomAreaInputHandler","inputDoorHandler","doorsInputHandler","setCustomValidity","reportValidity","sliderPointAreaHandler","evt","append","shiftX","clientX","getBoundingClientRect","left","sliderAreaMaxLenght","getComputedStyle","width","rangeChange","checkBorder","borderX","style","moveAt","pageX","currentX","onMouseMove","addEventListener","removeEventListener","sliderPointBathroomHandler","sliderbathroomAreaMaxLenght"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nconst AREA_MIN = 1;\nconst AREA_MAX = 300;\nconst BATHROOM_AREA_MIN = 1;\nconst BATHROOM_AREA_MAX = 20;\nconst DOORS_MIN = 0;\nconst DOORS_MAX = 20;\nconst COST_PER_DOOR = 8500;\nconst INPUT_DOOR_PERCENT = 0.05;\nconst SLIDER_SHIFT = 4;\n\nconst spaceTypes = {\n  'new-building': 6000,\n  'old-building': 8500,\n};\n\nconst electricityTypes = {\n  'no-electricity': 0,\n  'change-electricity': 300,\n  'new-electricity': 600,\n};\n\nconst repairsTypes = {\n  'cosmetic': 0,\n  'major': 1500,\n  'designing': 3000,\n};\n\nconst isBathroomRepair = {\n  'bathroom-repair': 13000,\n  'bathroom-norepair': 0,\n};\n\nconst isWarmFloor = {\n  'warm-floor': 200,\n  'nowarm-floor': 0,\n};\n\nconst roofTypes = {\n  'noroof': 0,\n  'gypsum-roof': 300,\n  'ceiling-roof': 450,\n  '2xgypsum-roof': 600,\n};\n\nconst calculationResult = document.querySelector('.calculator__result span');\n\nconst spaceTypeInput = document.querySelector('.calculator-form__item--space-type');\nconst electricityInput = document.querySelector('.calculator-form__item--electricity');\nconst repairsTypesInput = document.querySelector('.calculator-form__item--repairs-type');\nconst bathroomRepairInput = document.querySelector('.calculator-form__item--bathroom-repair');\nconst warmFloorRepairInput = document.querySelector('.calculator-form__item--warm-floor');\nconst doorsInput = document.querySelector('.calculator-form__item--doors');\nconst repairsAreaInput = document.querySelector('.calculator-form__item--repairs-area');\n\nconst roofInput = document.querySelector('.calculator-form__item--roof');\nconst bathroomAreaInput = document.querySelector('.calculator-form__item--bathroom-area');\nconst inputDoor = document.querySelector('.calculator-form__item--input-door');\nconst inputDoorText = document.querySelector('.calculator-form__item--input-door ~ p');\nconst slideArea = document.querySelector('.slider--area');\nconst slideBathroom = document.querySelector('.slider--bathroom');\nconst sliderPointArea = slideArea.querySelector('.slider__pointer--repairs-area');\nconst sliderPointBathroom = slideBathroom.querySelector('.slider__pointer--bathroom');\nconst sliderArea = slideArea.querySelector('.slider__repairs-area');\nconst sliderBathroomArea = slideBathroom.querySelector('.slider__bathroom-area');\n\nlet spaceTypeCost = spaceTypes[spaceTypeInput.value];\nlet electricityCost = electricityTypes[electricityInput.value];\nlet repairsTypesCost = repairsTypes[repairsTypesInput.value];\nlet bathroomRepairCost = isBathroomRepair[bathroomRepairInput.value];\nlet warmFloorRepairCost = isWarmFloor[warmFloorRepairInput.value];\nlet roofTypesCost = roofTypes[roofInput.value];\nlet doorsNumber = Number(doorsInput.value);\nlet sliderAreaRepairs = parseInt(repairsAreaInput.value);\nlet sliderbathroomAreaRepairs = parseInt(bathroomAreaInput.value);\n\n/**\n * Форматирует результат, вставляя пробел после каждого 3-го символа\n * @param {number} num - входные данные\n * @returns {string} - отформатированные данные\n */\nconst formatResult = (num) => {\n  const result = num.toString();\n  return result.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, '$1' + ' ');\n};\n\n/**\n * Вычисляет стоимость ремонта\n * @returns {number} - стоимость ремонта\n */\nconst calculateResultCost = () => {\n  let result = spaceTypeCost * sliderAreaRepairs +\n    electricityCost * sliderAreaRepairs +\n    repairsTypesCost * sliderAreaRepairs +\n    bathroomRepairCost * sliderbathroomAreaRepairs +\n    warmFloorRepairCost * sliderAreaRepairs +\n    COST_PER_DOOR * doorsNumber +\n    roofTypesCost * sliderAreaRepairs;\n\n  result = inputDoor.checked ? result + INPUT_DOOR_PERCENT * result : result;\n  return `${formatResult(result.toFixed())} руб.`;\n};\n\n/**\n * Отрисовывает стомость ремонта на странице\n */\nconst renderResultCost = () => {\n  calculationResult.textContent = calculateResultCost();\n};\n\nrenderResultCost();\n\nconst spaceTypeInputHandler = () => {\n  spaceTypeCost = spaceTypes[spaceTypeInput.value];\n  renderResultCost();\n};\n\nconst electricityTypesInputHandler = () => {\n  electricityCost = electricityTypes[electricityInput.value];\n  renderResultCost();\n};\n\nconst repairsTypesInputHandler = () => {\n  repairsTypesCost = repairsTypes[repairsTypesInput.value];\n  renderResultCost();\n};\n\nconst bathroomRepairInputHandler = () => {\n  bathroomRepairCost = isBathroomRepair[bathroomRepairInput.value];\n  renderResultCost();\n\n  if (!isBathroomRepair[bathroomRepairInput.value]) {\n    slideBathroom.classList.add('slider--hide');\n    inputDoor.classList.add('calculator-form__item--extra-margin');\n  } else {\n    slideBathroom.classList.remove('slider--hide');\n    inputDoor.classList.remove('calculator-form__item--extra-margin');\n  }\n};\n\nconst warmFloorInputHandler = () => {\n  warmFloorRepairCost = isWarmFloor[warmFloorRepairInput.value];\n  renderResultCost();\n};\n\nconst roofInputHandler = () => {\n  roofTypesCost = roofTypes[roofInput.value];\n  renderResultCost();\n};\n\nconst repairsAreaInputHandler = () => {\n  sliderAreaRepairs = parseInt(repairsAreaInput.value);\n  renderResultCost();\n};\n\nconst bathroomAreaInputHandler = () => {\n  sliderbathroomAreaRepairs = parseInt(bathroomAreaInput.value);\n  renderResultCost();\n};\n\nconst inputDoorHandler = () => {\n  renderResultCost();\n  if (inputDoor.checked) {\n    inputDoorText.textContent = 'Да';\n  } else {\n    inputDoorText.textContent = 'Нет';\n  }\n};\n\nconst doorsInputHandler = () => {\n  if (!doorsInput.value) {\n    doorsInput.value = '';\n    doorsNumber = 0;\n    doorsInput.setCustomValidity(`Минимальное знаение - ${DOORS_MIN}`);\n  } else if (doorsInput.value > DOORS_MAX) {\n    doorsInput.value = DOORS_MAX;\n    doorsNumber = DOORS_MAX;\n    doorsInput.setCustomValidity(`Максимальное знаение - ${DOORS_MAX}`);\n  } else {\n    doorsNumber = Number(doorsInput.value);\n    doorsInput.setCustomValidity('');\n  }\n  renderResultCost();\n  doorsInput.reportValidity();\n};\n\nconst sliderPointAreaHandler = (evt) => {\n  slideArea.append(sliderPointArea);\n\n  const shiftX = evt.clientX - sliderPointArea.getBoundingClientRect().left;\n  const sliderAreaMaxLenght = parseInt(getComputedStyle(repairsAreaInput).width) - 19;\n  const rangeChange = AREA_MAX / (AREA_MAX + SLIDER_SHIFT);\n\n  const checkBorder = (borderX) => {\n    if (borderX < -SLIDER_SHIFT) {\n      sliderPointArea.style.left = `${-SLIDER_SHIFT}px`;\n      sliderArea.style.width = `${-SLIDER_SHIFT}px`;\n      repairsAreaInput.value = `${AREA_MIN} кв.м`;\n    } else if (borderX > sliderAreaMaxLenght) {\n      sliderPointArea.style.left = `${sliderAreaMaxLenght}px`;\n      sliderArea.style.width = `${sliderAreaMaxLenght}px`;\n      repairsAreaInput.value = `${AREA_MAX} кв.м`;\n    } else {\n      sliderPointArea.style.left = `${borderX}px`;\n      sliderArea.style.width = `${borderX}px`;\n      repairsAreaInput.value = `${((borderX + SLIDER_SHIFT + 1) * rangeChange).toFixed()} кв.м`;\n    }\n  };\n\n  const moveAt = (pageX) => {\n    const currentX = pageX - shiftX - slideArea.getBoundingClientRect().left;\n    checkBorder(currentX);\n    repairsAreaInputHandler();\n  };\n\n  moveAt(evt.pageX);\n\n  const onMouseMove = (evt) => {\n    moveAt(evt.pageX);\n  };\n\n  document.addEventListener('mousemove', onMouseMove);\n  document.addEventListener('mouseup', () => {\n    document.removeEventListener('mousemove', onMouseMove);\n  });\n};\n\nconst sliderPointBathroomHandler = (evt) => {\n  slideBathroom.append(sliderPointBathroom);\n\n  const shiftX = evt.clientX - sliderPointBathroom.getBoundingClientRect().left;\n  const sliderbathroomAreaMaxLenght = parseInt(getComputedStyle(bathroomAreaInput).width) - 17;\n  const rangeChange = 11;\n\n  const checkBorder = (borderX) => {\n    if (borderX < -SLIDER_SHIFT) {\n      sliderPointBathroom.style.left = `${-SLIDER_SHIFT}px`;\n      sliderBathroomArea.style.width = `${-SLIDER_SHIFT}px`;\n      bathroomAreaInput.value = `${BATHROOM_AREA_MIN} кв.м`;\n    } else if (borderX > sliderbathroomAreaMaxLenght) {\n      sliderPointBathroom.style.left = `${sliderbathroomAreaMaxLenght}px`;\n      sliderBathroomArea.style.width = `${sliderbathroomAreaMaxLenght}px`;\n      bathroomAreaInput.value = `${BATHROOM_AREA_MAX} кв.м`;\n    } else {\n      sliderPointBathroom.style.left = `${borderX}px`;\n      sliderBathroomArea.style.width = `${borderX}px`;\n      bathroomAreaInput.value = `${((borderX + BATHROOM_AREA_MAX) / rangeChange).toFixed()} кв.м`;\n    }\n  };\n\n  const moveAt = (pageX) => {\n    const currentX = pageX - shiftX - slideBathroom.getBoundingClientRect().left;\n    checkBorder(currentX);\n    bathroomAreaInputHandler();\n  };\n\n  moveAt(evt.pageX);\n\n  const onMouseMove = (evt) => {\n    moveAt(evt.pageX);\n  };\n\n  document.addEventListener('mousemove', onMouseMove);\n  document.addEventListener('mouseup', () => {\n    document.removeEventListener('mousemove', onMouseMove);\n  });\n};\n\nspaceTypeInput.addEventListener('change', spaceTypeInputHandler);\nelectricityInput.addEventListener('change', electricityTypesInputHandler);\nrepairsTypesInput.addEventListener('change', repairsTypesInputHandler);\nbathroomRepairInput.addEventListener('change', bathroomRepairInputHandler);\nwarmFloorRepairInput.addEventListener('change', warmFloorInputHandler);\ndoorsInput.addEventListener('input', doorsInputHandler);\nroofInput.addEventListener('change', roofInputHandler);\ninputDoor.addEventListener('change', inputDoorHandler);\n\nsliderPointArea.addEventListener('mousedown', sliderPointAreaHandler);\nsliderPointArea.addEventListener('dragstart', () => {\n  return false;\n});\n\nsliderPointBathroom.addEventListener('mousedown', sliderPointBathroomHandler);\nsliderPointBathroom.addEventListener('dragstart', () => {\n  return false;\n});\n"],"sourceRoot":""}